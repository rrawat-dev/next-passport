{"ast":null,"code":"var passport = require('passport');\n\nvar LocalStrategy = require('passport-local').Strategy;\n\nvar cookieSession = require('cookie-session');\n\npassport.use(new LocalStrategy(function (username, password, done) {\n  console.log('authenticate ', username, password);\n  return done('errr', {\n    id: 'xxx'\n  });\n}));\npassport.serializeUser(function (user, done) {\n  done(null, user.id);\n});\npassport.deserializeUser(function (id, done) {\n  done(err, {\n    id: 'xxx'\n  });\n}); // Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\n\nfunction runMiddleware(req, res, fn) {\n  return new Promise((resolve, reject) => {\n    fn(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\n\nasync function handler(req, res) {\n  console.log('API CALLED');\n  await runMiddleware(req, res, cookieSession());\n  await runMiddleware(req, res, passport.initialize());\n  await runMiddleware(req, res, passport.session());\n  console.log('MIDDLEWARE RAN');\n  passport.authenticate('local', (err, result) => {\n    console.log('AUTHENTICATION RAN', request); // Rest of the API logic\n\n    res.json({\n      message: 'Hello Everyone!'\n    });\n  })(req, res);\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/rakrawat/workspace/next-passport/pages/api/login.js"],"names":["passport","require","LocalStrategy","Strategy","cookieSession","use","username","password","done","console","log","id","serializeUser","user","deserializeUser","err","runMiddleware","req","res","fn","Promise","resolve","reject","result","Error","handler","initialize","session","authenticate","request","json","message"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BE,QAA9C;;AACA,IAAIC,aAAa,GAAGH,OAAO,CAAC,gBAAD,CAA3B;;AAEAD,QAAQ,CAACK,GAAT,CAAa,IAAIH,aAAJ,CACT,UAASI,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,QAA7B,EAAuCC,QAAvC;AACA,SAAOC,IAAI,CAAC,MAAD,EAAS;AAACG,IAAAA,EAAE,EAAE;AAAL,GAAT,CAAX;AACH,CAJQ,CAAb;AAOAX,QAAQ,CAACY,aAAT,CAAuB,UAASC,IAAT,EAAeL,IAAf,EAAqB;AACxCA,EAAAA,IAAI,CAAC,IAAD,EAAOK,IAAI,CAACF,EAAZ,CAAJ;AACH,CAFD;AAIAX,QAAQ,CAACc,eAAT,CAAyB,UAASH,EAAT,EAAaH,IAAb,EAAmB;AACxCA,EAAAA,IAAI,CAACO,GAAD,EAAM;AAACJ,IAAAA,EAAE,EAAE;AAAL,GAAN,CAAJ;AACH,CAFD,E,CAIA;AACA;;AACA,SAASK,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,EAAjC,EAAqC;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,IAAAA,EAAE,CAACF,GAAD,EAAMC,GAAN,EAAWK,MAAM,IAAI;AACrB,UAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3B,eAAOF,MAAM,CAACC,MAAD,CAAb;AACD;;AAED,aAAOF,OAAO,CAACE,MAAD,CAAd;AACD,KANC,CAAF;AAOD,GARM,CAAP;AASD;;AAEH,eAAeE,OAAf,CAAuBR,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7BT,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMM,aAAa,CAACC,GAAD,EAAMC,GAAN,EAAWd,aAAa,EAAxB,CAAnB;AACA,QAAMY,aAAa,CAACC,GAAD,EAAMC,GAAN,EAAWlB,QAAQ,CAAC0B,UAAT,EAAX,CAAnB;AACA,QAAMV,aAAa,CAACC,GAAD,EAAMC,GAAN,EAAWlB,QAAQ,CAAC2B,OAAT,EAAX,CAAnB;AAEAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAV,EAAAA,QAAQ,CAAC4B,YAAT,CACI,OADJ,EAEI,CAACb,GAAD,EAAMQ,MAAN,KAAiB;AACbd,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCmB,OAAlC,EADa,CAEb;;AACAX,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GANL,EAOEd,GAPF,EAOOC,GAPP;AAQH;;AAED,eAAeO,OAAf","sourcesContent":["var passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\nvar cookieSession = require('cookie-session')\n\npassport.use(new LocalStrategy(\n    function(username, password, done) {\n        console.log('authenticate ', username, password);\n        return done('errr', {id: 'xxx'});\n    }\n));\n\npassport.serializeUser(function(user, done) {\n    done(null, user.id);\n});\n  \npassport.deserializeUser(function(id, done) {\n    done(err, {id: 'xxx'});\n});\n\n// Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\nfunction runMiddleware(req, res, fn) {\n    return new Promise((resolve, reject) => {\n      fn(req, res, result => {\n        if (result instanceof Error) {\n          return reject(result)\n        }\n  \n        return resolve(result)\n      })\n    })\n  }\n  \nasync function handler(req, res) {\n    console.log('API CALLED');\n\n    await runMiddleware(req, res, cookieSession())\n    await runMiddleware(req, res, passport.initialize())\n    await runMiddleware(req, res, passport.session())\n\n    console.log('MIDDLEWARE RAN');\n\n    passport.authenticate(\n        'local',\n        (err, result) => {\n            console.log('AUTHENTICATION RAN', request);\n            // Rest of the API logic\n            res.json({ message: 'Hello Everyone!' })\n        }\n    )(req, res);\n}\n  \nexport default handler"]},"metadata":{},"sourceType":"module"}